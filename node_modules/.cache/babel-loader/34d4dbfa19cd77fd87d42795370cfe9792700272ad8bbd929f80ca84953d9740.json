{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nlet openMenus = [];\nexport function toggleMenu(menuId) {\n  var menu = document.getElementById(menuId);\n  if (menu) {\n    const isOpen = menu.classList.contains(\"open\");\n    openMenus.forEach(openMenuId => {\n      if (openMenuId !== menuId) {\n        const openMenu = document.getElementById(openMenuId);\n        if (openMenu) {\n          openMenu.classList.remove(\"open\");\n          setTimeout(() => {\n            menu.style.display = \"block\";\n          }, 50);\n        }\n      }\n    });\n    menu.classList.toggle(\"open\", !isOpen);\n    if (isOpen) {\n      openMenus = openMenus.filter(openMenuId => openMenuId !== menuId);\n    } else {\n      openMenus.push(menuId);\n      setTimeout(() => {\n        menu.style.display = \"block\";\n      }, 50);\n    }\n    menu.addEventListener(\"mouseleave\", () => {\n      if (!isCursorOverElement(menu) && !isCursorOverLink(menuId)) {\n        menu.classList.remove(\"open\");\n        openMenus = openMenus.filter(openMenuId => openMenuId !== menuId);\n        setTimeout(() => {\n          menu.style.display = \"none\";\n        }, 50);\n      }\n    });\n\n    // Добавляем обработчик клика за пределами элемента\n    document.addEventListener(\"click\", e => {\n      const withinBoundaries = e.composedPath().includes(menu);\n      if (!withinBoundaries) {\n        menu.classList.remove(\"open\");\n        openMenus = openMenus.filter(openMenuId => openMenuId !== menuId);\n        setTimeout(() => {\n          menu.style.display = \"none\";\n        }, 50);\n      }\n    });\n\n    // Добавляем обработчик клика для ссылок внутри меню\n    const menuLinks = menu.querySelectorAll(\"a\");\n    menuLinks.forEach(link => {\n      link.addEventListener(\"click\", e => {\n        e.stopPropagation(); // Предотвращаем всплытие события\n      });\n    });\n  }\n}\nfunction isCursorOverElement(element) {\n  const rect = element.getBoundingClientRect();\n  return rect.top <= event.clientY && event.clientY <= rect.bottom && rect.left <= event.clientX && event.clientX <= rect.right;\n}\nfunction isCursorOverLink(menuId) {\n  const link = document.querySelector(`[data-menu=\"${menuId}\"]`);\n  if (link) {\n    const linkRect = link.getBoundingClientRect();\n    return linkRect.top <= event.clientY && event.clientY <= linkRect.bottom && linkRect.left <= event.clientX && event.clientX <= linkRect.right;\n  }\n  return false;\n}","map":{"version":3,"names":["openMenus","toggleMenu","menuId","menu","document","getElementById","isOpen","classList","contains","forEach","openMenuId","openMenu","remove","setTimeout","style","display","toggle","filter","push","addEventListener","isCursorOverElement","isCursorOverLink","e","withinBoundaries","composedPath","includes","menuLinks","querySelectorAll","link","stopPropagation","element","rect","getBoundingClientRect","top","event","clientY","bottom","left","clientX","right","querySelector","linkRect"],"sources":["/var/www/cosmo/src/components/header/language-currency.js"],"sourcesContent":["let openMenus = [];\n\nexport function toggleMenu(menuId) {\n  var menu = document.getElementById(menuId);\n\n  if (menu) {\n    const isOpen = menu.classList.contains(\"open\");\n\n    openMenus.forEach((openMenuId) => {\n      if (openMenuId !== menuId) {\n        const openMenu = document.getElementById(openMenuId);\n        if (openMenu) {\n          openMenu.classList.remove(\"open\");\n          setTimeout(() => {\n            menu.style.display = \"block\";\n          }, 50);\n        }\n      }\n    });\n\n    menu.classList.toggle(\"open\", !isOpen);\n\n    if (isOpen) {\n      openMenus = openMenus.filter((openMenuId) => openMenuId !== menuId);\n    } else {\n      openMenus.push(menuId);\n\n      setTimeout(() => {\n        menu.style.display = \"block\";\n      }, 50);\n    }\n\n    menu.addEventListener(\"mouseleave\", () => {\n      if (!isCursorOverElement(menu) && !isCursorOverLink(menuId)) {\n        menu.classList.remove(\"open\");\n        openMenus = openMenus.filter((openMenuId) => openMenuId !== menuId);\n\n        setTimeout(() => {\n          menu.style.display = \"none\";\n        }, 50);\n      }\n    });\n\n    // Добавляем обработчик клика за пределами элемента\n    document.addEventListener(\"click\", (e) => {\n      const withinBoundaries = e.composedPath().includes(menu);\n      if (!withinBoundaries) {\n        menu.classList.remove(\"open\");\n        openMenus = openMenus.filter((openMenuId) => openMenuId !== menuId);\n\n        setTimeout(() => {\n          menu.style.display = \"none\";\n        }, 50);\n      }\n    });\n\n    // Добавляем обработчик клика для ссылок внутри меню\n    const menuLinks = menu.querySelectorAll(\"a\");\n    menuLinks.forEach((link) => {\n      link.addEventListener(\"click\", (e) => {\n        e.stopPropagation(); // Предотвращаем всплытие события\n      });\n    });\n  }\n}\n\nfunction isCursorOverElement(element) {\n  const rect = element.getBoundingClientRect();\n  return (\n    rect.top <= event.clientY &&\n    event.clientY <= rect.bottom &&\n    rect.left <= event.clientX &&\n    event.clientX <= rect.right\n  );\n}\n\nfunction isCursorOverLink(menuId) {\n  const link = document.querySelector(`[data-menu=\"${menuId}\"]`);\n  if (link) {\n    const linkRect = link.getBoundingClientRect();\n    return (\n      linkRect.top <= event.clientY &&\n      event.clientY <= linkRect.bottom &&\n      linkRect.left <= event.clientX &&\n      event.clientX <= linkRect.right\n    );\n  }\n  return false;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}